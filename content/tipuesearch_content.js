var tipuesearch = {"pages": [{'title': 'About', 'text': '國立虎尾科技大學機械設計工程系 \n National Formosa University \n Department of Mechanical Design Engineering \n cp2024 計算機程式 \n 課程教材: \n Learn Python with Jupyter  ( site ,  ebook ) \n 教育版帳號\xa0microsoftonline 登入點:\xa0 https://login.microsoftonline.com/ \n Teams 線上教學: \n 以 "學號@nfu.edu.tw" 登入  https://login.microsoftonline.com/  Office 365 \n Teams 團隊代碼:  ldodwua \n 個人倉儲: https://github.com/mdecp2024/hw-41123236 \n 個人網站: https://mdecp2024.github.io/hw-41123236 \n 其他資訊: \n cd2023_pj3ag4_zmq_football_4.7.7z \n cd2024_2b_g6_steel_ball_platform_nxopen_copsim.7z \n', 'tags': '', 'url': 'About.html'}, {'title': 'Attendance', 'text': '出席 (10%) - 自行舉證評分 \n 自行利用 Github commits 提交記錄評分. \n', 'tags': '', 'url': 'Attendance.html'}, {'title': 'HW 1', 'text': '主題: 基於瀏覽器的分散式版次管理與整合程式開發環境 (10%) \n USB 隨身碟: \n 下載  python_2025_lite.7z  (428 MB, 解開壓縮後約 1.5 GB) \n Jupyter \n What are Github and Codespaces? \n Hello World - GitHub Docs \n 利用包含學號的字串作為帳號, 申請免費使用 Github. \n Python 課程教材:  https://www.learnpythonwithjupyter.com/  - PART 1 \n \n PART 1: Creating the basics 資料整理 (10%) \n 啟動可攜程式系統後, 在命令列中: \n y:\\>cd notebook \n y:\\notebook>jupyter lab --collaborative \n 進入  01_string_input_print.ipynb  練習如何修改 PART1 notebook 後存檔, 上傳至作業倉儲中的 downloads 目錄後, 透過  https://nbviewer.org/  將已經提交的  01_string_input_print.ipynb , 嵌入下列網頁中. \n \n 上列 iframe 標註的 html 語法: \n <iframe width="600" height="400" src="https://nbviewer.org/urls/mde.tw/cp2024_hw/downloads/01_string_input_print.ipynb"></iframe> \n 完成上述流程整理後, 請將 HW1 自評分數輸入 cp2024 自評表單中. \n', 'tags': '', 'url': 'HW 1.html'}, {'title': 'HW 1 Exam', 'text': '每六人為一組進行協同程式練習 \n 透過 Jupyterlab 協同網頁, 輪流指定各組編寫 Topic 1 相關的程式練習, 以及網頁內容 (localhost 與 Codespaces 環境)編輯. \n', 'tags': '', 'url': 'HW 1 Exam.html'}, {'title': 'w7', 'text': '說明如何利用 ShareX 與 Zoomit 拍攝電腦操作流程影片: \n Recording-20241024_153553.webm \n 示範如何加入 Brython 頁面, 並用來編寫 print 與 for 迴圈相關程式: \n 正在錄製-20241024_154917.webm \n', 'tags': '', 'url': 'w7.html'}, {'title': 'w10', 'text': '國立虎尾科技大學機械設計工程系 - 計算機程式 - 題目一 \n \n 國立虎尾科技大學機械設計工程系 - 計算機程式 - 題目二 \n \n 國立虎尾科技大學機械設計工程系 - 計算機程式 - 題目三 \n \n 心得: \n 這個問題運用運動學方程式解決了實際場景中的物理問題，加深了對運動學公式的理解。利用 Python 實現計算過程，讓問題解決過程變得高效且精確。 \n', 'tags': '', 'url': 'w10.html'}, {'title': 'w11_hw', 'text': '國立虎尾科技大學機械設計工程系 - 計算機程式 - 題目一 \n \n 國立虎尾科技大學機械設計工程系 - 計算機程式 - 題目二 \n \n 心得: \n 這個練習讓我加深了以下幾個方面的理解： \n \n \n 幾何計算的應用 ： \n \n 利用數學公式判斷點是否在圓內，是程式中最核心的部分。這種幾何邏輯也可應用於更多圖形處理場景，例如圖像處理或遊戲開發。 \n \n \n \n 雙重迴圈的使用 ： \n \n 透過雙重迴圈實現對 2D 區域的掃描。這種方式常見於網格操作、畫布繪圖等應用場景。 \n \n \n \n Python 與網頁的整合 ： \n \n 借助 Brython，可以直接在網頁中執行 Python 程式，並展示結果。這對於學習者來說提供了便捷的互動環境。 \n \n \n \n 挑戰與解決 ： \n \n 雖然這個任務不難，但需要注意數學公式與程式邏輯的結合，特別是處理浮點數的精度問題。 \n \n \n \n 未來，我希望能進一步將這類圖形輸出與更高階的圖形庫結合，例如用  matplotlib  或 WebGL 來實現更複雜的圖形生成。 \n', 'tags': '', 'url': 'w11_hw.html'}, {'title': 'w12_hw', 'text': '執行點單的Python  for  迴圈 \n \n', 'tags': '', 'url': 'w12_hw.html'}, {'title': 'w13_hw', 'text': '請在下列圖形中的兩個正方形外圍, 以黑色畫筆畫圓, 並設法在各線條所圍成的封閉區域塗上不同顏色. 操作過程請拍攝影片, 並在頁面中列出作業心得. \n 心得: \n 在這次的程式設計中，我利用 Brython 來進行網頁上的圖形繪製，這對我來說是一個很有趣的挑戰，因為它結合了 Python 語言和前端網頁開發技術。以下是我在製作過程中的一些心得體會： \n \n \n 理解 Canvas API ： 最初，使用 HTML5 的  canvas  元素進行圖形繪製並不簡單。雖然 HTML5 的  <canvas>  提供了強大的繪圖功能，但我需要花時間理解  getContext("2d")  的用法以及如何設置繪圖上下文來進行繪製。透過這次實作，我對  canvas  的基本操作和圖形處理有了更深的理解，並學會了如何繪製矩形、圓形以及如何設置不同的顏色和透明度。 \n \n \n 色彩運用 ： 顏色的選擇和搭配是這次程式中最具挑戰性的一部分。為了避免顏色重複，我挑選了多種具有區別性的顏色，並使用了半透明的 RGBA 顏色模式來創建更具層次感的效果。這不僅增強了視覺效果，還讓圖形之間的重疊部分顯得更加自然。顏色的選擇對於圖形間的互動性和可讀性至關重要。 \n \n \n 圖形重疊與交互 ： 這次的程式不僅僅是單純的繪製圖形，還涉及到如何處理不同形狀的重疊和交錯。矩形與圓形的重疊讓我對圖形的疊加效果有了更深入的思考。這些重疊區域的顏色運用和透明度設置創造了不同層次的視覺效果，使得整體圖形不會顯得過於單調。 \n \n \n 程式碼結構與可讀性 ： 在寫這段程式碼時，我注重了程式碼的可讀性與結構，對每一段功能進行了清晰的註解。這樣的做法不僅有助於自己未來的維護，也方便他人理解和修改程式。程式碼結構清晰，變數命名簡潔明瞭，讓整體邏輯一目了然。 \n \n \n 學到的技巧 ： \n \n 如何使用  canvas  的  beginPath()  和  stroke()  方法來繪製多個圖形。 \n 如何利用  fillStyle  設置填充顏色，並透過  rgba()  函數控制透明度。 \n 圓形與矩形的互動設計，尤其是在不同圖形的交疊區域中的顏色調整。 \n 在動態網頁中運用 Python 進行圖形繪製，這使我更加熟悉了 Brython 的應用。 \n \n \n \n \n 心得:這次的程式設計讓我更深入理解了前端開發中的繪圖技術。儘管 Canvas API 的學習過程中有些挑戰，但通過不斷的實踐，我成功創建了一個多層次的圖形畫布，並且學會了如何使用不同的顏色與形狀來表達複雜的視覺效果。這對我未來進行更多前端開發工作提供了很好的基礎。 \n', 'tags': '', 'url': 'w13_hw.html'}, {'title': 'w14_hw', 'text': '請根據兩個圓繪圖所圍成的區域(目前圍成三個區域, 但若圓心移動可能彼此獨立)進行不同顏色著色, 條件是當各圓半徑與圓心座標變動時, 程式只需輸入兩個圓的圓心座標與半徑, 就可以完成各區域的著色任務. \n \n', 'tags': '', 'url': 'w14_hw.html'}, {'title': 'w15', 'text': '題目一: 從1累加到100 \n 題目一心得: \n 這次練習的目的是透過 Gist 和 Brython，在課程網站上新增一個互動頁面。此頁面的重點功能是實作一個可以計算 "從 1 累加到 100" 的 Python 程式，並讓使用者透過網站介面執行 Brython 程式。藉此，我學習了如何結合 Brython 和 HTML，以實現動態網頁互動的功能。 \n 題目二: addto \n 題目二心得: \n 設計了一個函式  addto(start, end) ，可以接受使用者輸入的範圍（如 1 到 100），計算指定範圍內的累加結果，並在頁面中動態顯示結果。此函式被設定為另一個超連結，標題為 "addto"，用於展示這個進階功能。 \n 題目三: add_only_even \n 題目三心得: \n 新增了一個函式  add_only_even(start, end) ，用於計算從第一個輸入整數到第二個輸入整數範圍內的所有偶數累加結果，並將其連結標題設置為 "add_only_even"。這個功能進一步提升了互動性與應用靈活性。 \n 題目四: add_avoid_8 \n 題目四心得: \n 設計了一個函式  add_avoid_8(start, end) ，實現計算從第一個輸入整數到第二個輸入整數範圍內的累加結果，但必須避開任何包含數字 "8" 的整數（例如 8、18、28 等）。此功能的連結標題為 "add_avoid_8"，提供了更加細緻的操作控制。 \n 題目五: add_avoid_3and8 \n 題目五心得: \n 對  add_avoid_8  函式進行擴展，設計了一個可同時避開數字 "3" 和 "8" 的版本，並保留相同的連結標題 "add_avoid_8"。此版本的函式讓累加過程更加靈活，能更精確地過濾掉特定數字的影響。 \n \n', 'tags': '', 'url': 'w15.html'}, {'title': 'HW 2', 'text': '主題: Python 的數列、判斷式與重複迴圈 (20%) \n Python 課程教材:  https://www.learnpythonwithjupyter.com/  - PART 2 and Part 3 \n \n 延續 HW 1 網頁資料整理與程式練習方法, 整理下列內容 (20%): \n PART 2: Introduction to lists and if/else statements \n PART 3: Introduction to the for loop \n 完成上述流程整理後, 請將 HW2 自評分數輸入 cp2024 自評表單中. \n', 'tags': '', 'url': 'HW 2.html'}, {'title': 'HW 2 Exam', 'text': '每六人為一組進行協同程式練習 \n 透過 Jupyterlab 協同網頁, 輪流指定各組編寫 HW 2 相關的程式練習, 以及網頁內容 (localhost 與 Codespaces 環境)編輯. \n', 'tags': '', 'url': 'HW 2 Exam.html'}, {'title': 'w16_exam1', 'text': 'w16_exam1 隨堂考試 \n https://mdecp2024.github.io/hw-41123236/content/Brython.html?src=https://gist.githubusercontent.com/41123236/56d78808307253da8e06dd47b4ea1e3c/raw/576e42abb3c4bb265e72b26b771fcb026c677d0d/HW%25202%2520Exam \n', 'tags': '', 'url': 'w16_exam1.html'}, {'title': 'HW 3', 'text': '主題: Python 的數字、演算法與迴圈 (20%) \n Python 課程教材:  https://www.learnpythonwithjupyter.com/  - PART 4 and Part 5 \n 完成上述流程整理後, 請將 HW3 自評分數輸入 cp2024 自評表單中. \n', 'tags': '', 'url': 'HW 3.html'}, {'title': 'HW 3 Exam', 'text': '每六人為一組進行協同程式練習 \n 透過 Jupyterlab 協同網頁, 輪流指定各組編寫 HW 3 相關的程式練習, 以及網頁內容 (localhost 與 Codespaces 環境)編輯. \n', 'tags': '', 'url': 'HW 3 Exam.html'}, {'title': 'HW 4', 'text': '主題: 利用 Python 控制機電模擬系統 (20%) \n 利用\xa0 https://solvespace.com/ \xa0建立機械系統零組件 \n 利用  CoppeliaSim  建立機電模擬系統 \n 利用  Python  跨網路控制瀏覽器上的機電模擬系統 \n 範例: \n cd2023_pj3ag4_zmq_football_4.7.7z \n cd2024_2b_g6_steel_ball_platform_nxopen_copsim.7z \n 完成上述流程整理後, 請將 HW4 自評分數輸入 cp2024 自評表單中. \n', 'tags': '', 'url': 'HW 4.html'}, {'title': 'HW 4 Exam', 'text': '每六人為一組進行協同程式練習 \n 透過 Jupyterlab 協同網頁, 輪流指定各組編寫 HW 4 相關的程式練習, 以及網頁內容 (localhost 與 Codespaces 環境)編輯. \n', 'tags': '', 'url': 'HW 4 Exam.html'}, {'title': 'Final Report', 'text': '期末口頭與書面專題報告 (20%) \n 期末口頭專題報告影片: \n ...... \n 期末書面專題報告檔案 (pdf): \n ...... \n 電腦輔助設計與實習課程總結心得: \n ...... \n 期末報告自評成績: \n 完成上述流程後, 請將 Final Report 自評分數輸入 cp2024 自評表單中. \n', 'tags': '', 'url': 'Final Report.html'}, {'title': 'Brython', 'text': '從 1 累加到 100: \n 1 add to 100 \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris Rotating Block \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor2 結束  \n \n \n', 'tags': '', 'url': 'Brython.html'}]};